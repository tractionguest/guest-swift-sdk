//
// GroupVisitsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class GroupVisitsAPI {
    /**
     Create a new Group Visit (Appointment)
     
     - parameter idempotencyKey: (header) An optional idempotency key to allow for repeat API requests. Any API request with this key will only be executed once, no matter how many times it&#39;s submitted. We store idempotency keys for only 24 hours. Any &#x60;Idempotency-Key&#x60; shorter than 10 characters will be ignored (optional)
     - parameter groupVisitCreateParams: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func createGroupVisit(idempotencyKey: String? = nil, groupVisitCreateParams: GroupVisitCreateParams? = nil, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Swift.Result<GroupVisit, Error>) -> Void)) {
        createGroupVisitWithRequestBuilder(idempotencyKey: idempotencyKey, groupVisitCreateParams: groupVisitCreateParams).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Create a new Group Visit (Appointment)
     - POST /group_visits
     - Creates a `GroupVisit` (Appointment)
     - parameter idempotencyKey: (header) An optional idempotency key to allow for repeat API requests. Any API request with this key will only be executed once, no matter how many times it&#39;s submitted. We store idempotency keys for only 24 hours. Any &#x60;Idempotency-Key&#x60; shorter than 10 characters will be ignored (optional)
     - parameter groupVisitCreateParams: (body)  (optional)
     - returns: RequestBuilder<GroupVisit> 
     */
    open class func createGroupVisitWithRequestBuilder(idempotencyKey: String? = nil, groupVisitCreateParams: GroupVisitCreateParams? = nil) -> RequestBuilder<GroupVisit> {
        let path = "/group_visits"
        let URLString = GuestSDKAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: groupVisitCreateParams)

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Idempotency-Key": idempotencyKey?.encodeToJSON(),
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<GroupVisit>.Type = GuestSDKAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**
     Delete a Group Visit (Appointment)
     
     - parameter groupVisitId: (path)  
     - parameter idempotencyKey: (header) An optional idempotency key to allow for repeat API requests. Any API request with this key will only be executed once, no matter how many times it&#39;s submitted. We store idempotency keys for only 24 hours. Any &#x60;Idempotency-Key&#x60; shorter than 10 characters will be ignored (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func deleteGroupVisit(groupVisitId: String, idempotencyKey: String? = nil, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Swift.Result<Void, Error>) -> Void)) {
        deleteGroupVisitWithRequestBuilder(groupVisitId: groupVisitId, idempotencyKey: idempotencyKey).execute(apiResponseQueue) { result -> Void in
            switch result {
            case .success:
                completion(.success(()))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Delete a Group Visit (Appointment)
     - DELETE /group_visits/{group_visit_id}
     - Deletes a single instance of `GroupVisit` (Appointment).
     - parameter groupVisitId: (path)  
     - parameter idempotencyKey: (header) An optional idempotency key to allow for repeat API requests. Any API request with this key will only be executed once, no matter how many times it&#39;s submitted. We store idempotency keys for only 24 hours. Any &#x60;Idempotency-Key&#x60; shorter than 10 characters will be ignored (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func deleteGroupVisitWithRequestBuilder(groupVisitId: String, idempotencyKey: String? = nil) -> RequestBuilder<Void> {
        var path = "/group_visits/{group_visit_id}"
        let groupVisitIdPreEscape = "\(APIHelper.mapValueToPathItem(groupVisitId))"
        let groupVisitIdPostEscape = groupVisitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{group_visit_id}", with: groupVisitIdPostEscape, options: .literal, range: nil)
        let URLString = GuestSDKAPI.basePath + path
        let parameters: [String: Any]? = nil

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Idempotency-Key": idempotencyKey?.encodeToJSON(),
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = GuestSDKAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**
     Get a Group Visit (Appointment)
     
     - parameter groupVisitId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func getGroupVisit(groupVisitId: String, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Swift.Result<GroupVisit, Error>) -> Void)) {
        getGroupVisitWithRequestBuilder(groupVisitId: groupVisitId).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Get a Group Visit (Appointment)
     - GET /group_visits/{group_visit_id}
     - Gets the details of a single instance of a `GroupVisit`.
     - parameter groupVisitId: (path)  
     - returns: RequestBuilder<GroupVisit> 
     */
    open class func getGroupVisitWithRequestBuilder(groupVisitId: String) -> RequestBuilder<GroupVisit> {
        var path = "/group_visits/{group_visit_id}"
        let groupVisitIdPreEscape = "\(APIHelper.mapValueToPathItem(groupVisitId))"
        let groupVisitIdPostEscape = groupVisitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{group_visit_id}", with: groupVisitIdPostEscape, options: .literal, range: nil)
        let URLString = GuestSDKAPI.basePath + path
        let parameters: [String: Any]? = nil

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<GroupVisit>.Type = GuestSDKAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**
     List all Group Visits (Appointments)
     
     - parameter limit: (query) Limits the results to a specified number. Defaults to 50. (optional)
     - parameter offset: (query) Offsets the results to a specified number. Defaults to 0. (optional)
     - parameter locationIds: (query) A comma-separated string of locations IDs, to only show group visits (appointments) from those locations. (optional)
     - parameter sortWith: (query) A combination of attribute and direction, joined with an underscore, for sorting. Valid attributes are: &#x60;created_at&#x60;, &#x60;updated_at&#x60;, &#x60;name&#x60;, and &#x60;start_time&#x60;. Valid directions are &#x60;asc&#x60; and &#x60;desc&#x60;. E.g., &#x60;name_desc&#x60;, &#x60;start_time_asc&#x60;. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func getGroupVisits(limit: String? = nil, offset: String? = nil, locationIds: String? = nil, sortWith: String? = nil, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Swift.Result<PaginatedGroupVisitsList, Error>) -> Void)) {
        getGroupVisitsWithRequestBuilder(limit: limit, offset: offset, locationIds: locationIds, sortWith: sortWith).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     List all Group Visits (Appointments)
     - GET /group_visits
     - Gets a list of all `GroupVisit` entities (Appointments).
     - parameter limit: (query) Limits the results to a specified number. Defaults to 50. (optional)
     - parameter offset: (query) Offsets the results to a specified number. Defaults to 0. (optional)
     - parameter locationIds: (query) A comma-separated string of locations IDs, to only show group visits (appointments) from those locations. (optional)
     - parameter sortWith: (query) A combination of attribute and direction, joined with an underscore, for sorting. Valid attributes are: &#x60;created_at&#x60;, &#x60;updated_at&#x60;, &#x60;name&#x60;, and &#x60;start_time&#x60;. Valid directions are &#x60;asc&#x60; and &#x60;desc&#x60;. E.g., &#x60;name_desc&#x60;, &#x60;start_time_asc&#x60;. (optional)
     - returns: RequestBuilder<PaginatedGroupVisitsList> 
     */
    open class func getGroupVisitsWithRequestBuilder(limit: String? = nil, offset: String? = nil, locationIds: String? = nil, sortWith: String? = nil) -> RequestBuilder<PaginatedGroupVisitsList> {
        let path = "/group_visits"
        let URLString = GuestSDKAPI.basePath + path
        let parameters: [String: Any]? = nil

        var urlComponents = URLComponents(string: URLString)
        urlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "limit": limit?.encodeToJSON(),
            "offset": offset?.encodeToJSON(),
            "location_ids": locationIds?.encodeToJSON(),
            "sort_with": sortWith?.encodeToJSON(),
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<PaginatedGroupVisitsList>.Type = GuestSDKAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**
     Update a Group Visit (Appointment)
     
     - parameter groupVisitId: (path)  
     - parameter idempotencyKey: (header) An optional idempotency key to allow for repeat API requests. Any API request with this key will only be executed once, no matter how many times it&#39;s submitted. We store idempotency keys for only 24 hours. Any &#x60;Idempotency-Key&#x60; shorter than 10 characters will be ignored (optional)
     - parameter groupVisitUpdateParams: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func updateGroupVisit(groupVisitId: String, idempotencyKey: String? = nil, groupVisitUpdateParams: GroupVisitUpdateParams? = nil, apiResponseQueue: DispatchQueue = GuestSDKAPI.apiResponseQueue, completion: @escaping ((_ result: Swift.Result<GroupVisit, Error>) -> Void)) {
        updateGroupVisitWithRequestBuilder(groupVisitId: groupVisitId, idempotencyKey: idempotencyKey, groupVisitUpdateParams: groupVisitUpdateParams).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Update a Group Visit (Appointment)
     - PUT /group_visits/{group_visit_id}
     - Updates an existing `GroupVisit` (Appointment).
     - parameter groupVisitId: (path)  
     - parameter idempotencyKey: (header) An optional idempotency key to allow for repeat API requests. Any API request with this key will only be executed once, no matter how many times it&#39;s submitted. We store idempotency keys for only 24 hours. Any &#x60;Idempotency-Key&#x60; shorter than 10 characters will be ignored (optional)
     - parameter groupVisitUpdateParams: (body)  (optional)
     - returns: RequestBuilder<GroupVisit> 
     */
    open class func updateGroupVisitWithRequestBuilder(groupVisitId: String, idempotencyKey: String? = nil, groupVisitUpdateParams: GroupVisitUpdateParams? = nil) -> RequestBuilder<GroupVisit> {
        var path = "/group_visits/{group_visit_id}"
        let groupVisitIdPreEscape = "\(APIHelper.mapValueToPathItem(groupVisitId))"
        let groupVisitIdPostEscape = groupVisitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{group_visit_id}", with: groupVisitIdPostEscape, options: .literal, range: nil)
        let URLString = GuestSDKAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: groupVisitUpdateParams)

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Idempotency-Key": idempotencyKey?.encodeToJSON(),
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<GroupVisit>.Type = GuestSDKAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

}
